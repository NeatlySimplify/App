# AUTOGENERATED FROM 'app/queries/update_userBankAccount.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UpdateUserbankaccountResult(NoPydanticValidation):
    id: uuid.UUID


async def update_userBankAccount(
    executor: edgedb.AsyncIOExecutor,
    *,
    bankName: str,
    agency: str,
    accountNumber: str,
    saldo: float,
    tipo_conta: str,
    conta: uuid.UUID,
) -> UpdateUserbankaccountResult | None:
    return await executor.query_single(
        """\
        update Conta filter .id = <uuid>$conta set {
            bankName:= <str>$bankName ?? .bankName,
            agency:= <str>$agency ?? .agency,
            accountNumber:= <str>$accountNumber ?? .accountNumber,
            saldo:= <float32>$saldo ?? .saldo,
            tipo_conta:= <str>$tipo_conta ?? .tipo_conta,
        };\
        """,
        bankName=bankName,
        agency=agency,
        accountNumber=accountNumber,
        saldo=saldo,
        tipo_conta=tipo_conta,
        conta=conta,
    )
