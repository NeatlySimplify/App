# AUTOGENERATED FROM 'app/queries/create_user.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class CreateUserResult(NoPydanticValidation):
    id: uuid.UUID


async def create_user(
    executor: edgedb.AsyncIOExecutor,
    *,
    email: str,
    nome: str,
    sexo: str,
    estado_civil: str,
    details: str,
    tag_tipo: str,
    nascimento: datetime.datetime,
    cidade_atual: str,
    estado_atual: str,
    password: str,
    telefone: str,
    endereco: str,
) -> CreateUserResult:
    return await executor.query_single(
        """\
        insert User {
            email:= <str>$email,
            nome:= <str>$nome,
            sexo:= <str>$sexo,
            estado_civil:= <str>$estado_civil,
            details:= <str>$details,
            tag_tipo:= <str>$tag_tipo,
            nascimento:= <datetime>$nascimento,
            cidade_atual:= <str>$cidade_atual,
            estado_atual:= <str>$estado_atual,
            password:= <str>$password,
            telefone:= <json>$telefone,
            endereco:= <json>$endereco
        };\
        """,
        email=email,
        nome=nome,
        sexo=sexo,
        estado_civil=estado_civil,
        details=details,
        tag_tipo=tag_tipo,
        nascimento=nascimento,
        cidade_atual=cidade_atual,
        estado_atual=estado_atual,
        password=password,
        telefone=telefone,
        endereco=endereco,
    )
