# AUTOGENERATED FROM 'app/queries/update_peopleAddress.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UpdatePeopleaddressResult(NoPydanticValidation):
    id: uuid.UUID


async def update_peopleAddress(
    executor: edgedb.AsyncIOExecutor,
    *,
    rua: str,
    numero: str,
    complemento: str,
    bairro: str,
    cep: str,
    cidade: str,
    estado: str,
    id: uuid.UUID,
) -> UpdatePeopleaddressResult | None:
    return await executor.query_single(
        """\
        # Funciona com User, PessoaFisica e PessoaJuridica (Todos derivados de People)
        update Endereco filter .id = <uuid>$id set {
            rua:= <str>$rua ?? .rua,
            numero:= <str>$numero ?? .numero,
            complemento:= <str>$complemento ?? .complemento,
            bairro:= <str>$bairro ?? .bairro,
            cep:= <str>$cep ?? .cep,
            cidade:= <str>$cidade ?? .cidade,
            estado:= <str>$estado ?? .estado,
        }\
        """,
        rua=rua,
        numero=numero,
        complemento=complemento,
        bairro=bairro,
        cep=cep,
        cidade=cidade,
        estado=estado,
        id=id,
    )
