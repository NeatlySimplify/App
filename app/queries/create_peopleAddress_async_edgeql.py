# AUTOGENERATED FROM 'app/queries/create_peopleAddress.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class CreatePeopleaddressResult(NoPydanticValidation):
    id: uuid.UUID


async def create_peopleAddress(
    executor: edgedb.AsyncIOExecutor,
    *,
    rua: str,
    complemento: str,
    bairro: str,
    cep: str,
    cidade: str,
    estado: str,
    id: uuid.UUID,
) -> CreatePeopleaddressResult | None:
    return await executor.query_single(
        """\
        # Funciona com User, PessoaFisica e PessoaJuridica (Todos derivados de People)
        update People filter .id = <uuid>$id set {
            endereco += (insert Endereco {
                    rua:= <str>$rua,
                    numero:= <str>$complemento,
                    complemento:= <str>$complemento,
                    bairro:= <str>$bairro,
                    cep:= <str>$cep,
                    cidade:= <str>$cidade,
                    estado:= <str>$estado
                }
            )
        }\
        """,
        rua=rua,
        complemento=complemento,
        bairro=bairro,
        cep=cep,
        cidade=cidade,
        estado=estado,
        id=id,
    )
